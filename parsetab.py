
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'int float string load split filepath input output index train use sequential test add_layer compile fit evaluate relu sigmoid adam\n    start : LoadFile Split Use AddL Compile Fit Evaluate\n    \n    LoadFile : load filepath\n    \n    Split : split splitinfo\n    \n    splitinfo : input index\n              | output index\n    \n    Use : use TON\n    \n    TON : sequential\n    \n    AddL : add_layer int Act\n    \n    Act : relu\n        | sigmoid\n    \n    Compile : compile Optimizer\n    \n    Optimizer : adam\n    \n    Fit : fit epoch BatchSize\n    \n    epoch : int\n    \n    BatchSize : int\n    \n    Evaluate : evaluate\n    '
    
_lr_action_items = {'load':([0,],[3,]),'$end':([1,28,29,],[0,-1,-16,]),'split':([2,6,],[5,-2,]),'filepath':([3,],[6,]),'use':([4,9,16,17,],[8,-3,-4,-5,]),'input':([5,],[10,]),'output':([5,],[11,]),'add_layer':([7,14,15,],[13,-6,-7,]),'sequential':([8,],[15,]),'index':([10,11,],[16,17,]),'compile':([12,25,26,27,],[19,-8,-9,-10,]),'int':([13,22,30,31,],[20,31,33,-14,]),'fit':([18,23,24,],[22,-11,-12,]),'adam':([19,],[24,]),'relu':([20,],[26,]),'sigmoid':([20,],[27,]),'evaluate':([21,32,33,],[29,-13,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'LoadFile':([0,],[2,]),'Split':([2,],[4,]),'Use':([4,],[7,]),'splitinfo':([5,],[9,]),'AddL':([7,],[12,]),'TON':([8,],[14,]),'Compile':([12,],[18,]),'Fit':([18,],[21,]),'Optimizer':([19,],[23,]),'Act':([20,],[25,]),'Evaluate':([21,],[28,]),'epoch':([22,],[30,]),'BatchSize':([30,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> LoadFile Split Use AddL Compile Fit Evaluate','start',7,'p_start','test.py',111),
  ('LoadFile -> load filepath','LoadFile',2,'p_LoadFile','test.py',118),
  ('Split -> split splitinfo','Split',2,'p_Split','test.py',124),
  ('splitinfo -> input index','splitinfo',2,'p_splitinfo','test.py',130),
  ('splitinfo -> output index','splitinfo',2,'p_splitinfo','test.py',131),
  ('Use -> use TON','Use',2,'p_Use','test.py',137),
  ('TON -> sequential','TON',1,'p_TON','test.py',143),
  ('AddL -> add_layer int Act','AddL',3,'p_AddL','test.py',149),
  ('Act -> relu','Act',1,'p_Act','test.py',155),
  ('Act -> sigmoid','Act',1,'p_Act','test.py',156),
  ('Compile -> compile Optimizer','Compile',2,'p_Compile','test.py',162),
  ('Optimizer -> adam','Optimizer',1,'p_Optimizer','test.py',168),
  ('Fit -> fit epoch BatchSize','Fit',3,'p_Fit','test.py',174),
  ('epoch -> int','epoch',1,'p_epoch','test.py',180),
  ('BatchSize -> int','BatchSize',1,'p_BatchSize','test.py',186),
  ('Evaluate -> evaluate','Evaluate',1,'p_Evaluate','test.py',192),
]
